#  -*- Mode: Outline -*-

* Known Bugs

** There is a bug in the regex library config code, where the macros for
   determining whether a posix regcomp/regexec are present, and whether
   the user has specified a library explicity with --with-regex-prefix
   (et. al.) don't cooperate, so you don't always get the option you ask
   for.   We should test for user specified libraries first, and then
   test those for POSIX compliance with the other macros, falling back to
   the included regex files if these tests fail.

** expOutput.c needs to export "outputShutdown(bool keep)

** getdefs leaves a NUL at the end of the database file

** memfrob(3GNU) as a function

* In Progress

*** ANSI format specifiers: ceEfgG with conversion quals h and l

* Pending

** need to write a compat/strcspn.c and add AC_REPLACE_FUNC(strcspn).
** All errors from autogen/getdefs etc. should start with,
   `options.pzProgName' (aka 'basename(argv[0])').
** Change the invocations of getdefs to send output to stdout in
   preference to invoking autogen internally.  The current method is ugly.
** add a homerc attribute to getdefs options.
** devise a clean way for multiple flavors of definition input:
   XML
   CGI-POST
   different documentation extractors, akin to "getdefs"
** What if getdefs presumed that any entries that followed
   the last named entry were additional copies of the last named entry.
   viz.,  --subblock=foo=bar
   
   and:     * foo: one, two, three
   
   yields:  foo = { bar='one', 'two', 'three'; };
   
   *that* could be done without disrupting the world.

** How about writing a function, (set-cl-option "text")
   grep for ``/\*=gfunc [a-z]'' in the sources for an example
   of how to do that.  THEN:
   
      [= AutoGen5 Template
         (set-cl-option "subblock arg=type,name,mode,doc")
      =]

*  Possibilities for the (distant) future:

** implement [= FOR x IN a, b, c, ... =]
** write code for "autogetopt" (GNU getopt), or
  possibly the new glibc argp parser.
