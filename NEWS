New in __CURRENT_VERSION__ - October, 2005

* Fixed a small timing hole where the read from the read end of the output
  pipe of the server shell can fail.  (The read is retried.)

New in 5.7.3 - October, 2005

* Definition and license text files were mmap-ed in without checking for
  the size being a multiple of a page.  strlen() would seg fault.
  Horrible, horrible design of mmap!
* disable autoopts/test/getopt.test unless autoopts has been fully installed.
  (It requires getopt.tpl which requires a fully installed environment.)
* several other usability improvements to the tear off library.

New in 5.7.2 - July 2005

* template shell code may now use a shell function "die" that will print
  an error message and shoot down the master autogen process.
* the tear-off/add-in libopts library will now specify that the
  "options.h" header is to be installed.
* realpath(3C) usage in libopts has been cleaned up.  It is now only used
  if PATH_MAX is defined for the platform.  canonicalize_file_name(3C) is
  used where available.

New in 5.7.1 - June, 2005

* Update to libtool 1.5.18
* add "arg-range" text to the generated man pages
* Update the FSF address
* added a script to convert the "libopts" tarball into a full,
  independently buildable, project.

New in 5.7 - April, 2005

AutoOpts:
* "libopts" handles stand alone configuration file processing.
  Use the functions configFileLoad, optionGetValue, optionNextValue
  and optionUnloadNested.

* AutoOpts values can contain nested values, a la "getsubopts(3C)".
  The syntaxes recognized are:
  * that of getsubopts (except you do not specify which are acceptable
    and values may be quoted)
  * that of a config file (newline separated name/value pairs, per
    traditional configuration file formatting)
  * xml style where the associated values are marked with either of:
      <val-name>...</val-name>
      <named-no-value/>

New in 5.6.6 - February 2005

AutoOpts:
* "pathfind" is now incorporated into libopts, if not natively supported
* "options.h" and "usage-txt.h" are installed into an "autoopts" subdir.
* "for-each" main procedures can handle the arguments/input lists in
  several different ways, by calling the callback function with:
  * whatever the argument was
  * with the argument, after verifying it is really a file
  * with an fopen-ed file pointer to the file
  * with a pointer to the contents of the named file
  This is documented in the docs and generated man pages for programs
  that use it.

AutoGen:
* AutoGen macros were added for inserting definition file line numbers
  into the output files:  (def-file-line "value-name")
* autogen will no longer try to catch real time signals
