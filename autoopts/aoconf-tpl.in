[= AutoGen5 Template

in=autoopts-config.in

## Time-stamp:      "2006-09-10 11:17:21 bkorb"
## Author:          Bruce Korb <bkorb@gnu.org>
## Maintainer:      Bruce Korb <bkorb@gnu.org>
## Created:         Mon Jun 30 15:35:12 1997
##            by: bkorb
## ---------------------------------------------------------------------
## $Id: aoconf-tpl.in,v 4.1 2006/09/10 18:20:03 bkorb Exp $

=]
#! /bin/sh
## ---------------------------------------------------------------------
## autoopts-config.in -- Tell a client where to find installed autoopts
##
##  Autoopts copyright 1992-2006 Bruce Korb
##
[= (dne "## ") =]
## ---------------------------------------------------------------------
## Code:
[=

FOR cfg  =]
[= c-name =]="[=c-val=]"[=
ENDFOR   =]

optlist="[= (join " " (stack "cfg.c-name")) =]"
test -n "${ldopts}" && ldflags="${ldopts}${libdir} ${ldflags}"
test "${includedir}" = "/usr/include" && cflags=""

for o in $optlist everything
do eval echo_${o}=false ; done

usage()
{
  test $# -gt 0 && {
    exec 1>&2
    echo autoopts-config error: "$*"
  }

  echo Usage: autoopts-config \<\<OPTION\>\> [ ... ]
  echo Options may be one or more of:

  for o in $optlist everything
  do  echo "       ${o}"
  done | sed 's,_,-,g'
  echo '"everything" will print out the list of all names and their values.'
  exit $#
}

test $# -gt 0 || usage "No value specified"

# Figure out what's wanted
#
while test $# -gt 0; do
  o=`echo $1 | sed 's,^-*,,;s/-/_/g'`

  case $o in
  everything | \
  \*)  echo_everything=true
       break
       ;;

  help | h | \? )  usage     ;;

  *[!a-zA-Z0-9_]* ) usage "Invalid name:  ${o}" ;;

  *)   eval f="\$echo_${o}" || usage "Unknown value:  ${o}"
       [ -n "$f" ]          || usage "Unknown value:  ${o}"
       eval echo_${o}=true
       ;;
  esac
  shift
done

if ${echo_everything}
then
   for o in $optlist
   do eval \${echo_${o}} || continue

      eval v=\"\${${o}}\"
      printf "%-12s $v\n" ${o}
   done
else
   val=''
   for o in $optlist
   do eval \${echo_${o}} || continue

      eval v=\"\${${o}}\"
      val="${val} ${v}"
   done
   echo "${val}"
fi

exit 0
## end of [= (out-name) =] */
[= (out-switch "autoopts-config.1")
   (define tmp-dir (shell
      "tempdir=`(mktemp -d .ao-XXXXXX) 2>/dev/null`
      test -z \"${tempdir}\" && tempdir=${TMPDIR:-/tmp}/.ao-$$
      test -d ${tempdir} || mkdir -p ${tmpdir} || die cannot mkdir ${tempdir}
      echo ${tempdir}/" ))
   (dne "\\\" " "\\\" ") \=]
.TH autoopts-config 1 [= `date '+%Y-%m-%d'` =] "" "Programmer's Manual"
.SH NAME
autoopts-config \- script to get information about installed version of
autoopts
.SH SYNOPSIS
.B autoopts-config
.B [<value-name> [...]] | everything
.PP
.SH DESCRIPTION
\fBautoopts-config\fP is a tool that is used by configure to determine
the compile and linker flags that should be used to compile and link
programs that use autoopts.  \fIvalue-name\fPs may be preceeded by
one or more hyphens.  They are silently ignored.
.SH "VALUE NAMES"
[=

FOR cfg

  =][= (out-push-new (string-append tmp-dir (get "c-name"))) \=]
.TP
.BR [= c-name =]
.sp
[= c-desc =]
[= (out-pop) =][=

ENDFOR cfg

=][= `cat ${tempdir}/* && rm -rf ${tempdir}` =]
.SH "SEE ALSO"
.IR Autogen
Info system documentation.
.SH AUTHORS
AutoGen is the work of Bruce Korb <bkorb@gnu.org>.
.br
Bruce Korb <bkorb@gnu.org> and
.br
Luca Filipozzi <lfilipoz@debian.org>
wrote this manpage.
.PP
AutoOpts is released under either the GNU General Public License with the
Library exception (LGPL), or else the advertising clause free BSD license.
Which license used is at the discretion of the licensee.[= #

end of aoconf.tpl  =]
