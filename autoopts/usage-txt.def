
AutoGen Definitions usage-txt.tpl; /* -*- Mode: C -*- */

/*
 *  This file is part of AutoOpts, a companion to AutoGen.
 *  AutoOpts is free software.
 *  AutoOpts is copyright (c) 1992-2007 by Bruce Korb - all rights reserved
 *
 *  AutoOpts is available under any one of two licenses.  The license
 *  in use must be one of these two and the choice is under the control
 *  of the user of the license.
 *
 *   The GNU Lesser General Public License, version 3 or later
 *      See the files "COPYING.lgplv3" and "COPYING.gplv3"
 *
 *   The Modified Berkeley Software Distribution License
 *      See the file "COPYING.mbsd"
 *
 *  These files have the following md5sums:
 *
 *  239588c55c22c60ffe159946a760a33e pkg/libopts/COPYING.gplv3
 *  fa82ca978890795162346e661b47161a pkg/libopts/COPYING.lgplv3
 *  66a5cedaf62c4b2637025f049f9b826f pkg/libopts/COPYING.mbsd
 */

/* Keep this file sorted:

   blocksort pat=^utxt in=usage-txt.def out=usage-txt.sort \
   key='ut-name *= *([a-zA-Z0-9_]+);' spacing=1 trail='End of usage-txt'

   IF okay:  mv -f usage-txt.sort usage-txt.def

   $Id: usage-txt.def,v 4.19 2007/11/17 21:01:55 bkorb Exp $
 */

/*
 *  This file contains all the user visible AutoOpts text.
 *  For each "utxt" entry, there is its type (const 'tCC'
 *  or not 'char'), its unique name (the sort key) and the
 *  actual string itself.  Using the usage-txt template, these
 *  are then inserted into *five* constructs:
 *
 *  1.  a pointer field in a data structure pointing to all strings
 *  2.  a #define abbreviation of the full structure name
 *  3.  an initialized character array of the English string
 *  4.  the initializer for the data structure defined in #1
 *  5.  translation code compiled into the client program
 */
#ifdef TEMPLATE
utxt = { ut-type = cch_t;
         ut-name = 0;
         ut-text = "";
};
#endif

utxt = { ut-name = AO_Bad;
         ut-text = "AutoOpts function called without option descriptor\n";
};

utxt = { ut-name = AO_Big;
         ut-text = "\tThis exceeds the compiled library version:  ";
};

utxt = { ut-name = AO_Err;
         ut-text =
            "Automated Options Processing Error!\n"
            "\t%s called AutoOpts function with structure version %d:%d:%d.\n";
};

utxt = { ut-name = AO_Sml;
         ut-text = "\tThis is less than the minimum library version:  ";
};

utxt = { ut-name = All;
         ut-text = "all";
};

utxt = { ut-name = Alt;
         ut-text = "\t\t\t\t- an alternate for %s\n";
};

utxt = { ut-name = AmbigKey;
         ut-text = "%s error:  the keyword `%s' is ambiguous for %s\n";
};

utxt = { ut-name = Ambiguous;
         ut-text = "ambiguous";
};

utxt = { ut-name = ArgsMust;
         ut-text = "%s: Command line arguments required\n";
};

utxt = { ut-name = AtMost;
         ut-text = "%d %s%s options allowed\n";
};

utxt = { ut-name = Auto;
         ut-text = "version and help options:";
};

utxt = { ut-name = BadPipe;
         ut-text = "Error %d (%s) from the pipe(2) syscall\n";
};

utxt = { ut-name = BadVerArg;
         ut-text =
"ERROR: version option argument '%c' invalid.  Use:\n\
\t'v' - version only\n\
\t'c' - version and copyright\n\
\t'n' - version and copyright notice\n";
};

utxt = { ut-name = CantFmt;
         ut-text = "ERROR:  %s option conflicts with the %s option\n";
};

utxt = { ut-name = CantSave;
         ut-text = "%s(optionSaveState): error: cannot allocate %d bytes\n";
};

utxt = { ut-name = DefaultOpt;
         ut-text = "\t\t\t\t- default option for unnamed options\n";
};

utxt = { ut-name = Dis;
         ut-text = "\t\t\t\t- disabled as --%s\n";
};

utxt = { ut-name = Enab;
         ut-text = "\t\t\t\t- enabled by default\n";
};

utxt = { ut-name = Equiv;
         ut-text = "-equivalence";
};

utxt = { ut-name = ErrOnly;
         ut-text = "ERROR:  only ";
};

utxt = { ut-name = ExamineFmt;
         ut-text = " - examining environment variables named %s_*\n";
};

utxt = { ut-name = FiveSpaces;
         ut-text = "     ";
};

utxt = { ut-name = FlagOkay;
         ut-text =
"Options are specified by doubled hyphens and their name\n\
or by a single hyphen and the flag character.\n";
};

utxt = { ut-name = FmtFmt;
         ut-text = "%%-%ds %%s\n";
};

utxt = { ut-name = ForkFail;
         ut-text = "fs error %d (%s) on fork - cannot obtain %s usage\n";
};

utxt = { ut-name = FSErrOptLoad;
         ut-text = "File error %d (%s) opening %s for loading options\n";
};

utxt = { ut-name = FSErrReadFile;
         ut-text = "fs error %d (%s) reading file %s\n";
};

utxt = { ut-name = FSOptError;
         ut-text = "fs error %d (%s) on %s option:  %s file %s\n";
};

utxt = { ut-name = FileCannotExist;
         ut-text = "\t\t\t\t- file must not pre-exist\n";
};

utxt = { ut-name = FileMustExist;
         ut-text = "\t\t\t\t- file must pre-exist\n";
};

utxt = { ut-name = Genshell;
         ut-text =
            "\n= = = = = = = =\n\n"
            "This incarnation of genshell will produce\n"
             "a shell script to parse the options for %s:\n\n";
};

utxt = { ut-type = char;
         ut-name = GnuBoolArg;
         ut-text = "=T/F";
};

utxt = { ut-name = GnuBreak;
         ut-text = "\n%s\n\n";
};

utxt = { ut-type = char;
         ut-name = GnuKeyArg;
         ut-text = "=KWd";
};

utxt = { ut-type = char;
         ut-name = GnuFileArg;
         ut-text = "=file";
};

utxt = { ut-type = char;
         ut-name = GnuKeyLArg;
         ut-text = "=Mbr";
};

utxt = { ut-name = GnuNestArg;
         ut-text = "=Cplx";
};

utxt = { ut-type = char;
         ut-name = GnuNumArg;
         ut-text = "=num";
};

utxt = { ut-name = GnuOptArg;
         ut-text = "[=arg]";
};

utxt = { ut-name = GnuOptFmt;
         ut-text = "--%2$s%1$s";
};

utxt = { ut-type = char;
         ut-name = GnuStrArg;
         ut-text = "=str";
};

utxt = { ut-name = IllOptChr;
         ut-text = "%s: illegal option -- %c\n";
};

utxt = { ut-name = IllOptStr;
         ut-text = "%s: %s option -- %s\n";
};

utxt = { ut-name = Illegal;
         ut-text = "illegal";
};

utxt = { ut-name = InvalOptDesc;
         ut-text = "AutoOpts ERROR:  invalid option descriptor for %s\n";
};

utxt = { ut-name = Members;
         ut-text = "\t\t\t\t- is a set membership option\n";
};

utxt = { ut-name = MisArg;
         ut-text = "%s: option `%s' requires an argument\n";
};

utxt = { ut-name = MultiEquiv;
         ut-text = "Equivalenced option '%s' was equivalenced to both\n"
                   "\t'%s' and '%s'";
};

utxt = { ut-name = Must;
         ut-text = "\t\t\t\t- must appear between %d and %d times\n";
};

utxt = { ut-name = NeedOne;
         ut-text = "ERROR:  The %s option is required\n";
};

utxt = { ut-name = NoArg;
         ut-text = "%s: option `%s' cannot have an argument\n";
};

utxt = { ut-name = NoArgs;
         ut-text = "%s: Command line arguments not allowed\n";
};

utxt = { ut-name = NoCreat;
         ut-text = "error %d (%s) creating %s\n";
};

utxt = { ut-name = NoFlags;
         ut-text =
"Options are specified by single or double hyphens and their name.\n";
};

utxt = { ut-name = NoKey;
         ut-text = "%s error:  `%s' does not match any %s keywords\n";
};

utxt = { ut-name = NoLim;
         ut-text = "\t\t\t\t- may appear multiple times\n";
};

utxt = { ut-name = NoPreset;
         ut-text = "\t\t\t\t- may not be preset\n";
};

utxt = { ut-name = NoRq_NoShrtTtl;
         ut-text = "   Arg Option-Name    Description\n";
};

utxt = { ut-name = NoRq_ShrtTtl;
         ut-text = "  Flg Arg Option-Name    Description\n";
};

utxt = { ut-name = NoStat;
         ut-text = "error %d (%s) stat-ing %s\n";
};

utxt = { ut-name = NoState;
         ut-text = "%s(optionRestore): error: no saved option state\n";
};

utxt = { ut-name = None;
         ut-text = "none";
};

utxt = { ut-name = NotDef;
         ut-text = "'%s' not defined\n";
};

utxt = { ut-name = NotEnough;
         ut-text = "ERROR:  The %s option must appear %d times\n";
};

utxt = { ut-name = NotFile;
         ut-text = "error:  cannot load options from non-regular file %s\n";
};

utxt = { ut-name = NotNumber;
         ut-text = "%s error:  `%s' is not a recognizable number\n";
};

utxt = { ut-name = NrmOptFmt;
         ut-text = " %3s %s";
};

utxt = { ut-name = NumberOpt;
         ut-text = "The '-#<number>' option may omit the hash char\n";
};

utxt = { ut-name = OneSpace;
         ut-text = " ";
};

utxt = { ut-name = OnlyOne;
         ut-text = "one %s%s option allowed\n";
};

utxt = { ut-name = OptsOnly;
         ut-text = "All arguments are named options.\n";
};

utxt = { ut-name = PathFmt;
         ut-text = " - reading file %s";
};

utxt = { ut-name = PlsSendBugs;
         ut-text = "\nplease send bug reports to:  %s\n";
};

utxt = { ut-name = Preset;
         ut-text = "\t\t\t\t- may NOT appear - preset only\n";
};

utxt = { ut-name = PresetFile;
         ut-text = "#  preset/initialization file\n#  %s#\n";
};

utxt = { ut-name = PresetIntro;
         ut-text = "\n\
The following option preset mechanisms are supported:\n";
};

utxt = { ut-name = Prog;
         ut-text = "program";
};

utxt = { ut-name = Prohib;
         ut-text = "prohibits these options:\n";
};

utxt = { ut-name = Reorder;
         ut-text = "Operands and options may be intermixed.  "
            "They will be reordered.\n";
};

utxt = { ut-name = ReqFmt;
         ut-text = "ERROR:  %s option requires the %s option\n";
};

utxt = { ut-name = ReqOptFmt;
         ut-text = " %3s %-14s %s";
};

utxt = { ut-name = ReqThese;
         ut-text = "requires these options:\n";
};

utxt = { ut-name = Req_NoShrtTtl;
         ut-text = "   Arg Option-Name   Req?  Description\n";
};

utxt = { ut-name = Req_ShrtTtl;
         ut-text = "  Flg Arg Option-Name   Req?  Description\n";
};

utxt = { ut-name = SepChars;
         ut-text = "-_^";
};

utxt = { ut-name = SetMemberSettings;
         ut-text = <<E_O_F
or you may use a numeric representation.  Preceding these with a '!' will
clear the bits, specifying 'none' will clear all bits, and 'all' will set them
all.  Multiple entries may be passed as an option argument list.

E_O_F ;
};

utxt = { ut-name = ShrtGnuOptFmt;
         ut-text = "%s";
};

utxt = { ut-name = SixSpaces;
         ut-text = "      ";
};

utxt = { ut-name = StdBoolArg;
         ut-text = "T/F";
};

utxt = { ut-name = StdBreak;
         ut-text = "\n%s\n\n%s";
};

utxt = { ut-name = StdFileArg;
         ut-text = "Fil";
};

utxt = { ut-name = StdKeyArg;
         ut-text = "KWd";
};

utxt = { ut-name = StdKeyLArg;
         ut-text = "Mbr";
};

utxt = { ut-name = StdNestArg;
         ut-text = "Cpx";
};

utxt = { ut-name = StdNoArg;
         ut-text = "no ";
};

utxt = { ut-name = StdNumArg;
         ut-text = "Num";
};

utxt = { ut-name = StdOptArg;
         ut-text = "opt";
};

utxt = { ut-name = StdReqArg;
         ut-text = "YES";
};

utxt = { ut-name = StdStrArg;
         ut-text = "Str";
};

utxt = { ut-name = TabHyp;
         ut-text = "\t\t\t\t- ";
};

utxt = { ut-name = TabHypAnd;
         ut-text = "\t\t\t\t-- and ";
};

utxt = { ut-name = Tabout;
         ut-text = "\t\t\t\t%s\n";
};

utxt = { ut-name = ThreeSpaces;
         ut-text = "   ";
};

utxt = { ut-name = TwoSpaces;
         ut-text = "  ";
};

utxt = { ut-name = UpTo;
         ut-text = "\t\t\t\t- may appear up to %d times\n";
};

utxt = { ut-name = ValidKeys;
         ut-text = "The valid \"%s\" option keywords are:\n";
};

/* End of usage-txt.def */
