#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# argument.test ---  test argument program attribute
#                    make sure that when it is not specified
#                    then option processing consumes all args.
#
# Time-stamp:        "2003-03-09 09:52:19 bkorb"
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:31 PDT 1999
#
# $Id: equiv.test,v 3.8 2003/03/09 19:53:52 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs
set -x

# # # # # # # # # # DEFINITIONS FILE # # # # # # # # #

echo "creating ${testname}.def in `pwd`"
CFLAGS="-g -static" \
testname="${testname}" test_main="${test_main}" \
argument="${argument}" long_opt="${long_opt}" \
${SHELL-sh} ${stdopts} option:'opt init' second=020
cat >> ${testname}.def <<'_EOF_'
long-opts;

flag = {
  name = alpha;
  descrip = "alpha opt";
  equivalence = alpha;
  doc = 'alpha mumbling';
  arg-type = str;
  arg-optional;
};

flag = {
  name = beta;
  descrip = "beta opt";
  equivalence = alpha;
  doc = 'beta mumbling';
  arg-type = num;
};

flag = {
  name = gamma;
  descrip = "gamma opt";
  equivalence = alpha;
  doc = 'gamma mumbling';
  arg-type = bool;
};

flag = {
  name = omega;
  descrip = "omega opt";
  equivalence = alpha;
  doc = 'omega mumbling';
  arg-type = key;
  keyword = uno, dos, tres, mucho;
  arg-optional;
  arg-default = mucho;
};
_EOF_
echo $AGEN ${testname}.def
$AGEN ${testname}.def || \
  failure AutoGen could not process

compile "-?"

# # # # # # # # # # HELP OUTPUT FILE # # # # # # # # #

echo creating ${testname}.hlp
cat > ${testname}.hlp <<_EOF_
test_${testname} - Test AutoOpts for ${testname}
USAGE:  equiv [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
  Flg Arg Option-Name    Description
   -o Str option         The option option descrip
   -s Num second         The second option descrip
      opt alpha          alpha opt
      Num beta           beta opt
				- an alternate for alpha
      T/F gamma          gamma opt
				- an alternate for alpha
      KWd omega          omega opt
				- an alternate for alpha
   -? no  help           Display usage information and exit
   -! no  more-help      Extended usage information passed thru pager

Options are specified by doubled hyphens and their name
or by a single hyphen and the flag character.

The valid omega option keywords are:
	uno
	dos
	tres
	mucho
_EOF_

cmp -s ${testname}.h*lp || \
  failure "`diff ${testname}.hlp ${testname}.help`"

INC="${INC} -DCOND=1"
compile "-?"
cat > ${testname}.hlp <<_EOF_
test_${testname} - Test AutoOpts for ${testname}
USAGE:  equiv [ -<flag> [<val>] | --<name>[{=| }<val>] ]...
  Flg Arg Option-Name    Description
   -o Str option         The option option descrip
   -s Num second         The second option descrip
      opt alpha          alpha opt
      Num beta           beta opt
				- an alternate for alpha
      T/F gamma          gamma opt
				- an alternate for alpha
      KWd omega          omega opt
				- an alternate for alpha
   -? no  help           Display usage information and exit
   -! no  more-help      Extended usage information passed thru pager

Options are specified by doubled hyphens and their name
or by a single hyphen and the flag character.

The valid omega option keywords are:
	uno
	dos
	tres
	mucho
_EOF_

cmp -s ${testname}.h*lp || \
  failure "
    `diff -c ${testname}.h*lp`"

cat > ${testname}.outbase <<_EOF_
23 109 756 /tmp/use
OPTION_CT=3
export OPTION_CT
TEST_EQUIV_SECOND=2
export TEST_EQUIV_SECOND
TEST_EQUIV_ALPHA=1
export TEST_EQUIV_ALPHA
OPTION_CT=4
export OPTION_CT
TEST_EQUIV_OPTION='opt'
export TEST_EQUIV_OPTION
TEST_EQUIV_ALPHA_MODE='BETA'
export TEST_EQUIV_ALPHA_MODE
TEST_EQUIV_BETA=5
export TEST_EQUIV_BETA
OPTION_CT=2
export OPTION_CT
TEST_EQUIV_ALPHA_MODE='GAMMA'
export TEST_EQUIV_ALPHA_MODE
TEST_EQUIV_GAMMA='true'
export TEST_EQUIV_GAMMA
OPTION_CT=2
export OPTION_CT
TEST_EQUIV_ALPHA_MODE='GAMMA'
export TEST_EQUIV_ALPHA_MODE
TEST_EQUIV_GAMMA='false'
export TEST_EQUIV_GAMMA
OPTION_CT=2
export OPTION_CT
TEST_EQUIV_ALPHA_MODE='OMEGA'
export TEST_EQUIV_ALPHA_MODE
TEST_EQUIV_OMEGA='tres'
export TEST_EQUIV_OMEGA
_EOF_

( set -e
  PAGER=wc ./${testname} --more | \
    sed 's,/use\..*,/use,;s,[ 	][ 	]*, ,g;s/^ //'
  ./${testname} --alpha -s 2
  ./${testname} --beta 5 -o opt
  ./${testname} --gamma Yes!
  ./${testname} --gamma false
  ./${testname} --omega tres ) > ${testname}.out

cmp -s ${testname}.out* || \
  failure "
    `diff -c ${testname}.out*`"

cleanup
# end of argument.test
