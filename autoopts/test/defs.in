#! /bin/echo this_file_should_be_sourced,_not_executed
#  -*- Mode: Shell-script -*-
#
# defs --- define the environment for autogen tests.
#
# Time-stamp:     "2010-07-18 11:01:17 bkorb"
# Author:         Bruce Korb <bkorb@gnu.org>
##
##  This file is part of AutoOpts, a companion to AutoGen.
##  AutoOpts is free software.
##  AutoOpts is Copyright (c) 1992-2010 by Bruce Korb - all rights reserved
##
##  AutoOpts is available under any one of two licenses.  The license
##  in use must be one of these two and the choice is under the control
##  of the user of the license.
##
##   The GNU Lesser General Public License, version 3 or later
##      See the files "COPYING.lgplv3" and "COPYING.gplv3"
##
##   The Modified Berkeley Software Distribution License
##      See the file "COPYING.mbsd"
##
##  These files have the following md5sums:
##
##  43b91e8ca915626ed3818ffb1b71248b pkg/libopts/COPYING.gplv3
##  06a1a2e4760c90ea5e1dad8dfaac4d39 pkg/libopts/COPYING.lgplv3
##  66a5cedaf62c4b2637025f049f9b826f pkg/libopts/COPYING.mbsd

progname=`echo "$0" | sed 's,^.*/,,'`
testname=`echo "$progname" | sed 's,\..*$,,'`
test_name=`echo ${testname} | sed 's/-/_/g'`
PS4=">${testname}> "
export progname testname

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#  C O N F I G U R E D   V A L U E S
#
# Make sure srcdir is an absolute path.  Supply the variable
# if it does not exist.  We want to be able to run the tests
# stand-alone!!
#
set -a
srcdir=`cd "@srcdir@" && pwd `
top_srcdir=`cd "@top_srcdir@" && pwd`
top_builddir=`cd @top_builddir@ && pwd`
GUILE_VERSION="@GUILE_VERSION@"
LIBGUILE_PATH="@LIBGUILE_PATH@"
AG_VERSION="@AG_VERSION@"
GREP="@GREP@"
EGREP="@EGREP@"
FGREP="@FGREP@"
SHELL="@CONFIG_SHELL@"
AGexe="@AGexe@"
CLexe="@CLexe@"
GDexe="@GDexe@"
INC="@LIBGUILE_CFLAGS@"
LIB='@AG_LDFLAGS@ @LDFLAGS@ @LIBGUILE_LIBS@'
DEBUG_ENABLED='@DEBUG_ENABLED@'
ulimit -c unlimited

test -z "${CFLAGS}"     && CFLAGS='@DEFS@ @CFLAGS@'
test -z "${CPPFLAGS}"   && CPPFLAGS='@CPPFLAGS@'
test -z "${testsubdir}" && testsubdir='@testsubdir@'
test -z "${CC}"         && CC='@CC@'
test -z "${CC}"         && echo "No CC configured" && exit 1
test -z "${PAGER}"      && PAGER=more

set +a

nl='
'
test -z "${BASH_VERSION}" && local() { : ; }

vars=`set | sed -n '/^\(LANG\|LC_[A-Z_]*\)=/s/=.*//p'` 2>/dev/null
unset $vars

#  If only the "rm(1)" command could be relied upon....
#
purge()
{
  local PS4='>purge>'
  rm -rf ${*} 2>/dev/null
  bad=''
  for f
  do test -f ${f} -o -d ${f} && bad="${bad} ${f}"
  done
  test -z "$bad" && return 0

  set -- $bad
  test "x${RANDOM}" = "x${RANDOM}" && RANDOM=`expr 0${RANDOM} + 1 2>/dev/null`

  f=ZZPURGE-${1}-${RANDOM}-$$
  if test $# -gt 1
  then mkdir ${f}
       mv $* ${f}/.
  else mv $1 ${f}
  fi
}

set_exe() {
  local PS4='>set_exe>'
  eval f=\${${1}}
  d=`dirname $f`
  d=`cd $d >/dev/null && pwd`
  PATH=${d}:${PATH}
  f=`basename $f`
  eval ${1}=${d}/${f}
}

init_tests() {
    local PS4='>ini>'
    logfile=`pwd`/testdir/${testname}.log
    exec 8>&2 1>${logfile} 2>&1
    set -x

    TMPDIR=`pwd`/testdir/${testname}-tmpd
    export TMPDIR
    mkdir ${TMPDIR}

    f=`\cd ${LIBGUILE_PATH}/../bin && pwd`
    PATH=${f}:${PATH}

    set_exe AGexe
    AGexe=${AGexe}
    set_exe GDexe
    set_exe CLexe

    builddir=`pwd`
    testsubdir=testdir
    INCS="-I${top_builddir} -I${top_builddir}/autoopts"
    CFLAGS="${INCS} "`echo ${CFLAGS} | sed 's/-Werror//'`

    export PATH
    echo PATH is ${PATH} >&2
    which columns >&2
    which autogen >&2

    lo_dir=${top_builddir}/autoopts
    test -d ${lo_dir}/.libs && lo_dir=${lo_dir}/.libs
    test "X${LD_LIBRARY_PATH}" = X || LD_LIBRARY_PATH=:${LD_LIBRARY_PATH}
    LD_LIBRARY_PATH=${lo_dir}:${LIBGUILE_PATH}${LD_LIBRARY_PATH}
    LIB=`echo ${lo_dir}/libopts.a`
    export LD_LIBRARY_PATH

    if test ${GUILE_VERSION} -gt 107000
    then
      case ${AG_VERSION} in
      *pre* ) GUILE_WARN_DEPRECATED=detailed ;;
      *     ) GUILE_WARN_DEPRECATED=no ;;
      esac
      export GUILE_WARN_DEPRECATED
    fi

    test -f /usr/lib/libgen.so && {
      case "${LIB}" in
      *-lgen* ) : ;;
      * ) LIB="${LIB} -lgen" ;;
      esac
    }

    export CC GUILE_VERSION LIBGUILE_PATH AG_VERSION AGexe GDexe CLexe
}

vgopts='--suppressions=/old-home/bkorb/ag/valgrind.conf --leak-check=yes'

be_silent()
{
    setx=:
    VERBOSE=false
    purge testdir

    # Sometimes, MSDos FS cannot even rename the directory!!
    #
    if test -d testdir
    then purge testdir/* testdir/.??*
    else msg=echo
         mkdir testdir || exit 1
    fi

    run_ag()
    {
        local tfile=${testname}-aglog-${1}-$$.log
        shift

        ${AGexe} -m "$@"
    }

    init_tests
}

be_verbose()
{
    set -x
    setx='set -x'
    msg=:
    VERBOSE=true
    test -d testdir || mkdir testdir || exit 1

    run_ag()
    {
        # local vgfile=/tmp/vglog/${1}-%p.txt
        # valgrind ${vgopts} --log-file=${vgfile} \
        local tfile=${testname}-aglog-${1}-$$.log
        shift

        MALLOC_CHECK_=2 \
            ${AGexe} -m --trace=every --trace-out=">>${tfile}" "$@"
    }

    init_tests
}

# A standard failure function
#
failure()
{
  local PS4='>fail>'
  ${setx}
  cd ${testsubdir}
  if test -d ../FAILURES
  then ( \cd ../FAILURES ; purge -rf ${testname}* .*${testname}* )
  else mkdir ../FAILURES ; fi

  exec > /dev/tty 2>&8
  cat ${logfile} >&2

  ( mv -f ${testname}* .*${testname}* ../FAILURES || : ) 2>/dev/null
  for f in core*
  do test -f ${f} && mv -f ${f} ../FAILURES/${testname}-${f} ; done

  echo FAILURE: "$*" >&8
  exit 1
}

cleanup()
{
  ${setx}
  if ${VERBOSE} ; then : ; else
    cd ${builddir}
    purge testdir
    test -d testdir && mv testdir ZZJUNK-$$
  fi
  ${msg} ${testname} done
}

compile()
{
  local PS4='>cc>'
  ${setx}
  test "X${Csrc}"  = "X" && Csrc="${testname}"
  test "X${Cexe}"  = "X" && Cexe="${Csrc}"
  test "X${Dnam}"  = "X" && Dnam="${testname}"

  d=`echo TEST_TEST_${Dnam}_OPTS | tr '[a-z]-' '[A-Z]_'`
  cc_cmd="${CC} ${CFLAGS} -D$d ${INC} -o ${Cexe} ${Csrc}.c ${LIB}"
  eval ${cc_cmd} || \
    failure cannot compile ${Csrc}.c

  if test $# -gt 0
  then
    ./${Cexe} ${*} > ${Csrc}.help || \
      failure cannot obtain help output for ${Csrc}
  fi
  Csrc='' Cexe='' Dnam=''
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

case "${VERBOSE}" in
( '' | [Nn]* | 0 | [Ff]* )
    be_silent ;;

( * )
    case "$-" in
    ( *x* ) be_verbose ;;
    (  *  ) be_silent ;;
    esac
esac

cd testdir || {
  echo "Cannot make or change into testdir" >&8
  exit 1
}
testsubdir=`pwd`

dirs=`
for f in ${top_builddir} ${top_srcdir}
do
  for d in . autoopts agen5
  do
    (cd $f/$d && pwd)
  done
done | sort -u | sed 's/^/-I/'`

INC=`echo ${dirs} ${CPPFLAGS} ${INC}`

stdopts=${top_srcdir}/autoopts/test/stdopts.def

#  All the tests will require the templates in the autoopts dir.
#
AUTOGEN_TEMPL_DIRS=`cd ${top_srcdir} > /dev/null ; pwd`/autoopts
AG_L=run_ag\ ao\ -L${AUTOGEN_TEMPL_DIRS}
export AUTOGEN_TEMPL_DIRS AG_L

#  In general, they will have a test main procedure, too.
#
test_main=yes
use_flags=true

: "=== Running $progname for ${testname} using ${SHELL} ==="
chmod +w * > /dev/null 2>&1 || :
export SHELL
case "$-" in
*x*) SHELLX="${SHELL} -x" ;;
 * ) SHELLX="${SHELL}" ;;
esac

## Local Variables:
## mode: shell-script
## indent-tabs-mode: nil
## End:

# defs.in ends here
