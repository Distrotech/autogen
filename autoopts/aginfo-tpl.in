[= AutoGen5 template texi=%s.texi

##  Documentation template
## 
##  AutoGen Copyright (C) 1992-1999 Bruce Korb
## 
## Author:            Bruce Korb <korbb@datadesign.com>
## Maintainer:        Bruce Korb <korbb@datadesign.com>
## Created:           Tue Sep 15 13:13:48 1998
## Last Modified:     Thu Jul  8 15:06:49 1999				      
##            by:     Bruce Korb <korb@datadesign.com>			      
## ---------------------------------------------------------------------
## $Id: aginfo-tpl.in,v 2.5 1999/10/22 00:28:20 bruce Exp $
## ---------------------------------------------------------------------
##
=]
@node [=

prog_name

=] Invocation
@[=
 (getenv "LEVEL")
 =] Invoking [=
prog_name
=]
@cindex [=% prog_name
 (define down-prog-name (string-downcase "%s"))
 (. down-prog-name) =] invocation
@ignore
[=
(out-push-new (shell
    (sprintf "echo %s | sed 's/texi$/menu/'" (out-name)) ) )
=]* [= % prog_name (sprintf "%%-32s"  "%s Invocation::")
     =] Invoking [=prog_name=]
[=(out-pop)=]
[=(dne "# ")=]

@end ignore
[=

IF (exist? "prog_info_descrip")  =]
[= prog_info_descrip =][=

ELSE =]
This [=(string-downcase! (getenv "LEVEL"))=] documents the @code{AutoOpts}
generated usage text and option meanings for [=prog_name=].[=
ENDIF=]

@menu
* [=(string-tr!
          (sprintf "%s %-24s" (get "prog_name") "usage::")
          "A-Z^_" "a-z--" ) =] [=prog_name=] Usage
[=(out-push-new (string-append (out-name) ".tmp"))
  (shell (string-append "f=" (out-name))) =][=
FOR flag =][=
  IF (> (len "doc") 0)
=]* [=(string-tr!
          (sprintf "%s %-24s" (get "prog_name")
                 (string-append (get "name") "::") )
          "A-Z^_" "a-z--" )
     =] [=% name (string-tr! "%s" "A-Z^_" "a-z--")=] Option
[=ENDIF =][=
ENDFOR flag=][=
(out-pop) =][=
`sort $f ; rm -f $f` =]
@end menu

@node [=(. down-prog-name)=] usage
@[=CASE (getenv "LEVEL") =][=
   = chapter    =][=
   = section    =]sub[=
   = subsection =]subsub[=
   ESAC =]section [=prog_name=] Usage
@cindex [=(. down-prog-name)=] usage

This is the automatically generated usage text for [=prog_name=]:

@example

[=
IF (exist? "prog_file_name") =][=
  % prog_file_name `PROG=%s` =][=
ELSE =][=
  % prog_name `PROG=%s
    if [ ! -f ${PROG} ]
    then PROG=\`echo $PROG | tr '[A-Z]' '[a-z]'\` ; fi
    if [ ! -f ${PROG} ]
    then PROG=\`echo $PROG | tr x_ x-\` ; fi` =][=
ENDIF=][=

IF (exist? "long_opts") =][=
    `HELP=--help` =][=
ELIF (exist? "flag.value") =][=
    `HELP='-?'` =][=
ELSE =][=
    `HELP=help` =][=
ENDIF =][=

`./${PROG} ${HELP} 2>&1 |
  sed -e 's/{/@{/g' -e 's/}/@}/g' -e 's/\t/        /g' `=]
@end example

[=
FOR flag=][=
   IF (> (len "doc") 0) =]
@node [=(. down-prog-name)=] [=% name (string-tr! "%s" "A-Z^_" "a-z--") =]
@[=CASE (getenv "LEVEL") =][=
   = chapter    =][=
   = section    =]sub[=
   = subsection =]subsub[=
   ESAC =]section [=% name (string-tr! "%s" "A-Z^_" "a-z--")=] Option
@cindex [=(. down-prog-name)=]-[=% name (string-tr! "%s" "A-Z^_" "a-z--")=]

[=doc=]
[=ENDIF=][=
ENDFOR flag=][=

aginfo.tpl ends here =]
