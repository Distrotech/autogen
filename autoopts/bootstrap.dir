#! /bin/echo This_file_must_be_sourced,_not_executed
# Time-stamp:      "2010-12-02 22:58:59 bkorb"
#
##  This file is part of AutoOpts, a companion to AutoGen.
##  AutoOpts is free software.
##  AutoOpts is Copyright (c) 1992-2010 by Bruce Korb - all rights reserved
##
##  AutoOpts is available under any one of two licenses.  The license
##  in use must be one of these two and the choice is under the control
##  of the user of the license.
##
##   The GNU Lesser General Public License, version 3 or later
##      See the files "COPYING.lgplv3" and "COPYING.gplv3"
##
##   The Modified Berkeley Software Distribution License
##      See the file "COPYING.mbsd"
##
##  These files have the following md5sums:
##
##  43b91e8ca915626ed3818ffb1b71248b pkg/libopts/COPYING.gplv3
##  06a1a2e4760c90ea5e1dad8dfaac4d39 pkg/libopts/COPYING.lgplv3
##  66a5cedaf62c4b2637025f049f9b826f pkg/libopts/COPYING.mbsd

test "X${mainpid}" = X && {
    \cd ${top_srcdir-..}
    top_srcdir=`pwd`
    . config/bootstrap.shlib
    cd autoopts
    free_trap=true
} || {
    free_trap=false
}

export AGexe=${AGexe-autogen}\ -L${top_srcdir}/autoopts/tpl
noag=`${AGexe} -v > /dev/null 2>&1 && echo false || echo true`

burn_aover() {
    agvars=$(egrep '^A[GO]_' ../VERSION)
    eval "${agvars}"
    vers_curr=$(expr '(' $AO_CURRENT   '*' 4096 ')' + $AO_REVISION)

    sedcmd="s=@CONFIG_SHELL@=$(which bash)=
	s=@AO_TEMPLATE_VERSION@=${vers_curr}=
	s=@bindir@=$(dirname $(which columns))="
    for f in $(echo "${agvars}" | sed 's/=.*//')
    do
        eval v=\${$f}
        sedcmd=${sedcmd}$'\n'"s%@${f}@%${v}%g"
    done

    ${VERBOSE} && {
        : sedcmd $sedcmd
        : on files: $(ls *.*)
    } || :

    cd tpl
    for f in *.in
    do
        sed "${sedcmd}" $f > ${f%.in}
    done
    chmod a+x *.pl
    cd -
    ${VERBOSE} && set -x || :
}

add_files_to_mf() {
    #  Regenerate the "genshell.h" 'cuz we just altered the template to
    #  contain the header version number.
    #
    ${AGexe} -Tagman3.tpl funcs.def || \
        die "FAILED: ${AGexe} -Tagman3.tpl funcs.def"

    local dtpl_files=$(
        for f in tpl/*.tpl
        do
            test -f ${f}.in || echo $f
        done
        echo tpl/std*.def tpl/*.pl
    )
    local ndtpl_files=$(
        for f in tpl/*.tpl
        do
            test -f ${f}.in && echo $f
        done)
    sedcmd=$'/^TPL_FILES /a\\\n'$(
        ls -1 ${dtpl_files} | columns -I4 --spread=1 --line=' \\\'
    )$'\n\n/^GENMAN /a\\\n'$(
        ls -1 *.3 | \
            sed '/^pathfind.3$/d' | \
            columns -I4 --spread=1 --line=' \\\'
    )$'\\\n\\\nINST_ND_PKGDATA = $(libsrc) \\\\\\\n'$(
        ls -1 ${ndtpl_files} | columns -I4 --spread=1 --line=' \\\'
    )

    rm -f *.3
    sed -i "${sedcmd}" Makefile.am
}

make_funcs_def()
{
    $noag && exit 1
    s2enum=`which mk-str2enum` 2>/dev/null || :
    test -x "${s2enum}" || \
        s2enum="bash ${top_srcdir}/add-on/char-mapper/mk-str2enum.sh"

    ${char_mapper:-char-mapper} autogen.map || die "FAILED: char-mapper"

    ${s2enum} --base-name=xat-attribute -n \
        type words members cooked uncooked keep || \
        die "FAILED: ${s2enum} --base-name=xat-attribute"

    ${s2enum} --base-name=value-type --prefix=vtp -n string integer \
        boolean bool keyword set set-membership nested hierarchy || \
        die "FAILED: ${s2enum} --base-name=value-type"
    burn_aover

    test -d autoopts || mkdir autoopts
    test -d po       || mkdir po
    ${AGexe} genshell.def  || \
        die "FAILED: ${AGexe} genshell.def"
    ${AGexe} usage-txt.def || \
        die "FAILED: ${AGexe} usage-txt.def"
    mv usage-txt.h   autoopts/.
    mv usage-txt.pot po/.

    files=$(sed -n '/^CSRC/,/\.c$/p' Makefile.am | \
        sed '/^CSRC/d;s/[=\\]//'
        echo  ../compat/pathfind.c)
    getdefs linenum srcfile template=options_h output=funcs.def $files
    chmod u+w funcs.def
    vers_min=$( expr '(' $AO_CURRENT - $AO_AGE ')' '*' 4096)
    cat >> funcs.def <<-  _END_VERS_INFO_
	vers-curr       = "${vers_curr}";
	vers-min        = "${vers_min}";
	vers-min-str    = "$(expr $AO_CURRENT - $AO_AGE):0:0";
	vers-sovers     = "${AO_SOVERS}";
	library         = opts;

	/*
	 *  THIS FILE IS DISTRIBUTED
	 *
	 *  This file is used to construct options.h + doc files.  Because it is
	 *  such a nuisance to get the build ordering correct, we distribute
	 *  this.  It should be constructed after all binaries are built.
	 */
	_END_VERS_INFO_
    ${AGexe} funcs.def || die "FAILED: ${AGexe} funcs.def"
    test -f options.h || die "options.h not created"
    mv options.h autoopts/.
    add_files_to_mf
    make_proto

    ${AGexe} aoconf.def || die "FAILED: ${AGexe} aoconf.def"
}

case "$1" in
*genshell.c )
    if ${noag}
    then
        test -f ${top_srcdir}/autoopts/genshell.c || \
            die "No autogen for building genshell.c"
    else
        ${AGexe} genshell.def || \
            die "FAILED: ${AGexe} genshell.def"
    fi
    ;;

*libopts.texi )
    if ${noag}
    then
        test -f ${top_srcdir}/autoopts/libopts.texi || \
            die "No autogen for building libopts.texi"
    else
        agopts='-Taginfo3.tpl -DLEVEL=subsection -blibopts funcs.def'
        ${AGexe} ${agopts} || \
            die "FAILED: ${AGexe} ${agopts}"
    fi
    ;;

aoconf )
    make_funcs_def
    ;;
esac

${free_trap} && trap '' 0
true

# Local Variables:
# mode:shell-script
# sh-indentation:4
# sh-basic-offset:4
# indent-tabs-mode: nil
# End:

# bootstrap.dir ends here
