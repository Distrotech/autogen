#! /bin/sh
#  -*- Mode: Shell-script -*-
# reorder.test --- test reorder functionality
#
# Time-stamp:        "2004-02-01 13:51:49 bkorb"
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:31 PDT 1999
# Last Modified:     $Date: 2005/01/01 00:20:58 $
#            by:     Bruce Korb <bkorb@gnu.org>			      
#
# $Id: reorder.test,v 4.1 2005/01/01 00:20:58 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`dirname $0`
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating $testname.tpl
cat > $testname.tpl <<'_EOF_'
<= AutoGen5 template test =>
From zero:<=

FOR a (for-from 0) (for-by 1) (for-sep ",")=>
<=(sprintf "%5d: " (for-index))=><=
  ?% elt %s absent =><=
  IF (first-for?) =>  first loop<= ENDIF =><=
  IF (last-for? ) =>   last loop<= ENDIF =><=
ENDFOR =>

From start by two:<=

FOR a (for-by 2) (for-sep ",")=>
<=(sprintf "%5d: " (for-index)) =><=
  ?% elt %s absent =><=
  IF (first-for?) =>  first loop<= ENDIF =><=
  IF (last-for? ) =>   last loop<= ENDIF =><=
ENDFOR =>
_EOF_

# # # # # # # # # # DEFINITIONS FILE # # # # # # # # #

echo creating $testname.def
cat > $testname.def <<_EOF_
autogen definitions $testname;
a[ 3] = { elt = three; };
a[ 5] = { elt = five; };
a[12] = { elt = twelve; };
a[ 8] = { elt = eight; };
a[ 1] = { elt = one; };
a[ 2] = { elt = two; };
_EOF_

# # # # # # # # # # EXPECTED OUTPUT FILE # # # # # # #

echo creating $testname.out
# this is the output we should expect to see
cat > $testname.out <<_EOF_
From zero:
    0: absent  first loop,
    1: one,
    2: two,
    3: three,
    4: absent,
    5: five,
    6: absent,
    7: absent,
    8: eight,
    9: absent,
   10: absent,
   11: absent,
   12: twelve   last loop

From start by two:
    1: one  first loop,
    3: three,
    5: five,
    7: absent,
    9: absent,
   11: absent   last loop
_EOF_

${AGexe} $testname.def || failure ${AGexe} failed
cmp -s $testname.test $testname.out || failure unexpected output

cleanup
# end of reorder.test
