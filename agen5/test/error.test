#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# error.test --- test error functionality
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Time-stamp:        "2003-05-18 13:02:10 bkorb"
# Created:           Fri Oct 1 10:27:30 PDT 1999
#            by: bkorb
#
# $Id: error.test,v 3.12 2003/05/18 20:02:40 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating ${testname}.tpl
cat > ${testname}.tpl <<'_EOF_'
<= AutoGen5 template fnord null =>
THIS TEXT SHOULD BE DELETED!!
<=
CASE (suffix) =><=

  ==  fnord  =><=

    (error "0 this is really okay")
    =>this is never seen<=

  * =><=

    (error "This is a multi-line
	error to show how to exit
	your template") =><=

ESAC =>
this is never seen
_EOF_

# # # # # # # # # # DEFINITIONS FILE # # # # # # # # #

echo creating ${testname}.def
cat > ${testname}.def <<'_EOF_'
autogen definitions alist;
#error The definitions file has a `#error' directive
_EOF_

# # # # # # # # # # EXPECTED OUTPUT FILE 1 # # # # # # #

echo creating ${testname}.out1
# this is the output we should expect to see
cat > ${testname}.out1 <<'_EOF_'
#error directive -- in error.def on line 3
	The definitions file has a `#error' directive
_EOF_

echo $AGEXE ${testname}.def
$AGEXE ${testname}.def 2> ${testname}.err1 && failure unexpected success
grep -v 'Giving up in' ${testname}.err1 >  ${testname}.err
cmp -s  ${testname}.err  ${testname}.out1 || \
  failure "actual->expected `diff -c ${testname}.err  ${testname}.out1`"

# # # # # # # # # # EXPECTED OUTPUT FILE 2 # # # # # # #

echo creating ${testname}.out2
# this is the output we should expect to see
cat > ${testname}.out2 <<'_EOF_'
DEFINITIONS Warning in error.tpl line 8 for error.fnord:
	0 this is really okay
Error in template error.tpl, line 13
	DEFINITIONS ERROR in error.tpl line 13 for /dev/null:
	This is a multi-line
	error to show how to exit
	your template
_EOF_

# this is *supposed* to exit with a failure status
echo autogen --no-def -T${testname}.tpl --base=${testname} >&2
$AGEXE --no-def -T${testname}.tpl --base=${testname} \
  2> ${testname}.err2 \
  && failure Unexpected success for AutoGen

cmp -s ${testname}.err2 ${testname}.out2 || \
  failure "actual->expected `diff -c ${testname}.err2 ${testname}.out2`"

# # # # # # # # # # EXPECTED OUTPUT FILE 3 # # # # # # #

echo creating ${testname}.out3
# this is the output we should expect to see
cat > ${testname}.out3 <<_EOF_
AutoGen aborting on signal <text-varies> in state EMITTING
processing template error2.tpl
            on line 2
       for function EXPR (11)
_EOF_

sed '/THIS TEXT/,/ESAC/d;s,this is never seen,<= `kill -TERM ${AG_pid}` =>,' \
    < ${testname}.tpl > ${testname}2.tpl

# this is *supposed* to exit with a failure status
echo autogen --no-def -T${testname}2.tpl --base=${testname} >&2
$AGEXE --no-def -T${testname}2.tpl --base=${testname} \
  2> ${testname}.tmp3 \
  && failure Unexpected success for AutoGen

sed 's,on signal .* in state,on signal <text-varies> in state,' \
  ${testname}.tmp3 > ${testname}.err3
cmp -s ${testname}.err3 ${testname}.out3 || \
  failure "actual->expected `diff -c ${testname}.err3 ${testname}.out3`"

# # # # # # # # # # EXPECTED OUTPUT FILE 4 # # # # # # #

sed 's,^#error.*,this is broken;,' ${testname}.def > ${testname}2.def

echo creating ${testname}.out4
# this is the output we should expect to see
cat > ${testname}.out4 <<'_EOF_'
syntax error:  in error2.def on line 2
	token in error:  VAR_NAME is broken;


	[[...<error-text>]]  broken;


Likely causes:  a mismatched quote, a value that needs quoting,
		or a missing semi-colon
_EOF_

echo $AGEXE ${testname}.def
$AGEXE ${testname}2.def 2> ${testname}.err4 && failure unexpected success
grep -v 'Giving up in' ${testname}.err4 >  ${testname}.err
cmp -s  ${testname}.err  ${testname}.out4 || \
  failure "`diff -c ${testname}.out4 ${testname}.err`"

# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating ${testname}.tpl5
cat > ${testname}.tpl5 <<'_EOF_'
<= AutoGen5 template fnord null =>
THIS TEXT SHOULD BE DELETED!!
<= ENDIF =>
_EOF_

$AGEXE -T ${testname}.tpl5 -b ${testname} --no-defin \
  2> ${testname}.out5 > /dev/null
 [ $? -ne 0 ] || failure "$AGEXE was okay with bogus input"

cat > ${testname}.samp5 <<'EOF'
Error in template error.tpl5, line 3
	Unknown macro or invalid context in error.tpl5 line 3:
	ENDIF
EOF

cmp -s  ${testname}.samp5  ${testname}.out5 || \
  failure "`diff -c ${testname}.samp5 ${testname}.out5`"

# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating ${testname}.tpl6
cat > ${testname}.tpl6 <<'_EOF_'
<= AutoGen5 template fnord null =>
This is a broken template, "nothing" is not defined.
<= (
if (exist? "nothing")
   (error "it is broken
   'cuz it's okay")
   (stumble-over-unbound-variable)
) =>
End Of File
_EOF_

$AGEXE -T ${testname}.tpl6 -b ${testname} --no-defin \
  2> ${testname}.out6 >/dev/null
[ $? -ne 0 ] || failure "$AGEXE was okay with bogus input"

cat > ${testname}.samp6 <<EOF
${testname}.tpl6:7:4: In expression (stumble-over-unbound-variable):
${testname}.tpl6:7:4: Unbound variable: stumble-over-unbound-variable
Scheme evaluation error.  AutoGen ABEND-ing in template
	error.tpl6 on line 3
Failing Guile command:  = = = = =

(
if (exist? "nothing")
   (error "it is broken
   'cuz it's okay")
   (stumble-over-unbound-variable)
)

=================================
EOF

## cmp -s  ${testname}.samp6  ${testname}.out6 || \
##   failure "`diff -c ${testname}.samp6 ${testname}.out6`"
diff -c ${testname}.samp6 ${testname}.out6

cleanup
# end of error.test
