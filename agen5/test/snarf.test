#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# load.test --- test the shared library loading
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:29 PDT 1999
# Last Modified:     $Date: 2001/05/09 05:27:55 $
#            by:     Bruce Korb <bkorb@gnu.org>
#
# $Id: snarf.test,v 1.1 2001/05/09 05:27:55 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # # # # SOURCE FILE # # # # # # # # #

echo creating ${testname}.c
cat > ${testname}.c <<_EOF_
#include "${testname}.h"
#include "${testname}.ini"
/*=gfunc test_to_example_x
 *
 * exparg: in, test input arg desc, optional, list
 *
=*/
SCM
test_scm_test_to_example_x( SCM in )
{
    return in;
}

/*=symbol mumble_check
 *
 * init_val:  SCM_BOOL_T
=*/
/*=symbol bumble_it
 *
 *  const_val:  100L
 *  global:
=*/
/*=syntax guile_syntax_ele
 *
 *  type:  scm_makacro
 *  cfn:   scm_m_undefine
=*/
_EOF_

# # # # # # # # # # PROCESS SOURCE FILE # # # # # # # # #

eopt="subblock=exparg=arg_name,arg_desc,arg_optional,arg_list"
eopt="$eopt templ=snarf srcfile"
eopt="assign=group=test assign=init=_init $eopt"
eopt="$eopt autogen=${AGEXE} base-name=${testname} agarg=-L$srcdir/.."

echo "getdefs $eopt ${testname}.c"
getdefs $eopt ${testname}.c || \
    failure getdefs ${testname}.c

sed '/DO NOT EDIT THIS FILE/,/and the template file/d' \
    ${testname}.ini > ${testname}.ini.tst

sed '/DO NOT EDIT THIS FILE/,/and the template file/d' \
    ${testname}.h > ${testname}.h.tst

# # # # # # # # # # EXPECTED INI FILE # # # # # # # # #

echo creating ${testname}.ini.OK
cat > ${testname}.ini.OK <<_EOF_
/*   -*- buffer-read-only: t -*- vi: set ro:
 *  
 *
 *  copyright 1992-2001 Bruce Korb
 *
 *  AutoGen is free software.
 *  
 *  You may redistribute it and/or modify it under the terms of the
 *  GNU General Public License, as published by the Free Software
 *  Foundation; either version 2, or (at your option) any later version.
 *  
 *  AutoGen is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with AutoGen.  See the file "COPYING".  If not,
 *  write to:  The Free Software Foundation, Inc.,
 *             59 Temple Place - Suite 330,
 *             Boston,  MA  02111-1307, USA.
 *
 *  Guile Initializations - Test Global Variables
 */
#include "${testname}.h"
static const char s_test_to_example_x[]        = "test->example!";

static const char s_guile_syntax_ele[]         = "guile-syntax-ele";
static const char s_bumble_it[]                = "bumble-it";
       SCM test_scm_sym_bumble_it          = SCM_BOOL_F;
static const char s_mumble_check[]             = "mumble-check";
static SCM test_scm_sym_mumble_check       = SCM_BOOL_F;


void _init( void );

/*
 * test Initialization procedure
 */
void
_init( void )
{
    gh_new_procedure( (char*)s_test_to_example_x,
                      test_scm_test_to_example_x,           0, 0, 1 );
    scm_make_synt( s_guile_syntax_ele, scm_makacro, scm_m_undefine );
    test_scm_sym_bumble_it = scm_permanent_object (SCM_CAR (scm_intern0 (s_bumble_it)));
    test_scm_sym_mumble_check = scm_permanent_object (SCM_CAR (scm_intern0 (s_mumble_check)));
}
_EOF_

cmp ${testname}.ini.* || \
    failure cmp ${testname}.ini.*

# # # # # # # # # # EXPECTED HEADER FILE # # # # # # #

echo creating ${testname}.h.OK
cat > ${testname}.h.OK <<_EOF_
/*   -*- buffer-read-only: t -*- vi: set ro:
 *  
 *
 *  copyright 1992-2001 Bruce Korb
 *
 *  AutoGen is free software.
 *  
 *  You may redistribute it and/or modify it under the terms of the
 *  GNU General Public License, as published by the Free Software
 *  Foundation; either version 2, or (at your option) any later version.
 *  
 *  AutoGen is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *  See the GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with AutoGen.  See the file "COPYING".  If not,
 *  write to:  The Free Software Foundation, Inc.,
 *             59 Temple Place - Suite 330,
 *             Boston,  MA  02111-1307, USA.
 *
 *  Guile Implementation Routines - for the test group
 */
#ifndef GUILE_PROC_DECLS
#define GUILE_PROC_DECLS
#include <guile/gh.h>

typedef enum {
    GH_TYPE_UNDEFINED = 0,
    GH_TYPE_BOOLEAN,
    GH_TYPE_SYMBOL,
    GH_TYPE_CHAR,
    GH_TYPE_VECTOR,
    GH_TYPE_PAIR,
    GH_TYPE_NUMBER,
    GH_TYPE_STRING,
    GH_TYPE_PROCEDURE,
    GH_TYPE_LIST,
    GH_TYPE_INEXACT,
    GH_TYPE_EXACT
} teGuileType;

teGuileType gh_type_e( SCM );

extern SCM test_scm_test_to_example_x( SCM );
extern SCM test_scm_sym_bumble_it;

#endif /* GUILE_PROC_DECLS */
_EOF_

cmp ${testname}.h.* || \
    failure cmp ${testname}.h.*

cleanup
# end of endmac.test
