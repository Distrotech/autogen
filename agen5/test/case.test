#! /bin/sh
#  -*- Mode: Shell-script -*-
# case.test --- test CASE functionality
#
# Time-stamp:        "2004-10-11 11:41:35 bkorb"
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:29 PDT 1999
# Last Modified:     $Date: 2005/01/01 00:20:58 $
#            by: bkorb
#
# $Id: case.test,v 4.1 2005/01/01 00:20:58 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`dirname $0`
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # TEMPLATE FILE # # # # # #

echo creating $testname.tpl
cat > $testname.tpl <<'EOF'
<= AutoGen5 template test =>
<=
FOR grp "\n" =><=
  CASE (get "nam") =><=

  == first  =>first:  <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  OK<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  *** BOGUS ***<=
        ~~ .*       =>~~ .*        *** BOGUS ***<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  == second =>second: <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  *** BOGUS ***<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  *** BOGUS ***<=
        ~* .        =>~* .         OK<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  == third  =>third:  <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  *** BOGUS ***<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  OK<=
        ~~ .*       =>~~ .*        *** BOGUS ***<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  ESAC =><=

ENDFOR grp=>
empty:  <= CASE empty-val =><=
   ~* .  =>WRONG<=
   !E    =>BOGUS<=
   +E    =>valid<=
   *     =>REAL-BOGUS<=
   ESAC  =>
bogus:  <= CASE bogus-val =><=
   ~* .  =>WRONG<=
   +E    =>BOGUS<=
   !E    =>valid<=
   *     =>REAL-BOGUS<=
   ESAC  =>
EOF

# # # # # # # SAMPLE OUTPUT FILE # # # # # #

echo creating $testname.out in `pwd`
# this is the output we should expect to see
cat > $testname.out <<'EOF'
first:  string matches: ~~ ^[a-z]*$  OK and ~ ^[a-z]*$  OK
second: String matches: ~* .         OK and ~ ^[a-z]*$  OK
third:  STRING matches: ~~ ^[A-Z]*$  OK and ~ ^[a-z]*$  OK
empty:  valid
bogus:  valid
EOF

# # # # # # # DEFINITIONS FILE # # # # # #

cat > $testname.def <<EOF
autogen definitions $testname;

grp = {
   nam = first;
   val = string;
};

grp = {
   nam = second;
   val = String;
};

grp = {
   nam = third;
   val = STRING;
};
empty-val;
EOF

# # # # # # # RUN AUTOGEN # # # # # #

${AGexe} $testname.def ||  failure autogen failed

# # # # # # # TEST RESULTS # # # # # #

cmp -s $testname.test $testname.out || failure unexpected output

cleanup
# end of case.test
