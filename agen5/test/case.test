#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# case.test --- test CASE functionality
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:29 PDT 1999
# Last Modified:     $Date: 2001/12/09 19:44:56 $
#            by:     Bruce Korb <bkorb@gnu.org>			      
#
# $Id: case.test,v 3.0 2001/12/09 19:44:56 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # TEMPLATE FILE # # # # # #

echo creating $testname.tpl
cat > $testname.tpl <<'EOF'
<= AutoGen5 template test =>
<=
FOR grp "\n" =><=
  CASE (get "nam") =><=

  == first  =>first:  <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  OK<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  *** BOGUS ***<=
        ~~ .*       =>~~ .*        *** BOGUS ***<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  == second =>second: <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  *** BOGUS ***<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  *** BOGUS ***<=
        ~~ .*       =>~~ .*        OK<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  == third  =>third:  <=(sprintf "%-6s" (get "val"))=> matches: <=
      CASE (get "val") =><=
        ~~ ^[a-z]*$ =>~~ ^[a-z]*$  *** BOGUS ***<=
        ~~ ^[A-Z]*$ =>~~ ^[A-Z]*$  OK<=
        ~~ .*       =>~~ .*        *** BOGUS ***<=
      ESAC => and <=
      CASE (get "val") =><=
        ~ ^[a-z]*$ =>~ ^[a-z]*$  OK<=
        *          =>~ .*        *** BOGUS ***<=
      ESAC =><=

  ESAC =><=

ENDFOR grp=>
EOF

# # # # # # # SAMPLE OUTPUT FILE # # # # # #

echo creating $testname.out in `pwd`
# this is the output we should expect to see
cat > $testname.out <<'EOF'
first:  string matches: ~~ ^[a-z]*$  OK and ~ ^[a-z]*$  OK
second: String matches: ~~ .*        OK and ~ ^[a-z]*$  OK
third:  STRING matches: ~~ ^[A-Z]*$  OK and ~ ^[a-z]*$  OK
EOF

# # # # # # # DEFINITIONS FILE # # # # # #

cat > $testname.def <<EOF
autogen definitions $testname;

grp = {
   nam = first;
   val = string;
};

grp = {
   nam = second;
   val = String;
};

grp = {
   nam = third;
   val = STRING;
};
EOF

# # # # # # # RUN AUTOGEN # # # # # #

$AGEXE $testname.def ||  failure autogen failed

# # # # # # # TEST RESULTS # # # # # #

cmp -s $testname.test $testname.out || failure unexpected output

cleanup
# end of case.test
