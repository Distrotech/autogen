#! /bin/sh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
# define.test --- test evalstack functionality
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Oct 1 10:27:31 PDT 1999
# Last Modified:     Fri Oct  1 10:27:21 1999				      
#            by:     Bruce Korb <bkorb@gnu.org>			      
#
# $Id: define.test,v 1.3 2000/04/04 13:21:58 bkorb Exp $
# ----------------------------------------------------------------------

# Common definitions
if test -z "$srcdir"; then
    srcdir=`echo "$0" | sed 's,[^/]*$,,'`
    test -z "$srcdir" && srcdir=.
    test "$srcdir" = "$0" && srcdir=.
    test "${VERBOSE+set}" != set && VERBOSE=1
fi
. $srcdir/defs

# # # # # # # TEMPLATE LIBRARY FILE # # # # # #

echo creating $testname.tlib
cat > $testname.tlib <<'_EOF_'
[+ AutoGen5 Template Library +]
[+

# * * * * * * * * * * * *

      VISUAL SEPARATION
+][+

DEFINE first_macro
+][+(for-index)+] Argument list:
	[+
  FOR arg "\n\t"
    +]arg[ [+(for-index)+] ] = [+ arg +][+
  ENDFOR +][+
ENDDEF +][+

# * * * * * * * * * * * *

      VISUAL SEPARATION
+][+

DEFINE last_macro
  +]This is the last (number [+(for-index)+]) macro.[+
ENDDEF +]
_EOF_


# # # # # # # # # # TEMPLATE FILE # # # # # # # # #

echo creating $testname.tpl
cat > $testname.tpl <<'_EOF_'
[= AutoGen5 Template test =]
[=

FOR value

=][=
  IF (or (first-for?) (last-for?)) =][=
    INVOKE (string-append (get "value") "_macro")
       arg = one  arg = "the second arg = the second"
       arg = (shell "date +'%A, %D'") arg = 'done.' =][=
  ELSE =]

     non first/last value: [=value=] = [= (for-index) =]
[=ENDIF =][=
ENDFOR =]
_EOF_


# # # # # # # # # # DEFINITIONS FILE # # # # # # # # #

echo creating $testname.def
cat > $testname.def <<_EOF_
autogen definitions $testname;

value = first;
value[2] = secondary;
value[4] = tertiary;
value[6] = last;
_EOF_

# this is the output we should expect to see
cat > $testname.out <<_EOF_
0 Argument list:
	arg[ 0 ] = one
	arg[ 1 ] = the second arg = the second
	arg[ 2 ] = `date +'%A, %D'`
	arg[ 3 ] = done.

     non first/last value: secondary = 2


     non first/last value: tertiary = 4
This is the last (number 6) macro.
_EOF_

echo $AGEXE --lib=$testname.tlib $testname.def
$AGEXE --lib=$testname.tlib $testname.def || failure $AGEXE failed
cmp -s $testname.test $testname.out || failure unexpected output

cleanup
# end of define.test
