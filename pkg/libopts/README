        THIS TARBALL IS NOT A FULL DISTRIBUTION.

The contents of this tarball is designed to be incorporated into
software packages that utilize the AutoOpts option automation
package and are intended to be installed on systems that may not
have libopts installed.

Usage Instructions for autoconf/automake/libtoolized projects:

1. Install the unrolled tarball into your package source tree
2. Add ''${tag}/Makefile'' to the list of configured files
3. Move libopts.m4 to your autoconf macro directory
4. Add ''AUTOOPTS_CHECK'' to your configure.ac file.
5. Add ''@LIBOPTS_DIR@'' to your SUBDIRS directory build list.
   It will be empty if not needed, otherwise ''${tag}''.
6. Configure the file ${LIBOPTS_MAKEFILE}.  It will also be
   empty if not needed.
7. Add ''@LIBOPTS_CFLAGS@'' to any mumble_CFLAGS that need it
8. Add ''@LIBOPTS_LDADD@'' to any mumble_LDADD variables that
   will be linking against libopts.
9. Make sure your object files explicitly depend upon the
   generated options header file.  e.g.:

     $(prog_OBJECTS) : prog-opts.h
     prog-opts.h : prog-opts.c
     prog-opts.c : prog-opts.def
         autogen prog-opts.def

10. Add ''@LIBOPTS_DIST@'' to "EXTRA_DIST".  If ''@LIBOPTS_DIR@''
    is empty, it won't get built, but still needs to be distributed.
    If it is not empty, it will automatically get distributed, so
    ''@LIBOPTS_DIST@'' will be left empty.

See how simple?  :-)  There's even another gotcha.  :-(

From http://mail.gnu.org/pipermail/automake/2002-August/011704.html

> It turns out I want to distribute the source for a library that may or
> may not get built.  Consequently, though I configure the Makefile when
> building the distribution, I likely won't actually build the thing.
> That has the following consequences for "make distcheck" (again):
> 
> 1.  The library, a .deps subdirectory and some dependency files
>     get dropped into the distribution.  This happens because
>     that directory must be specified in the EXTRA_DIST variable
>     when it is not in the SUBDIRS variable.
> 
> 2.  During distcheck, the tarball is unrolled and all the files
>     and directories are made read-only.
> 
> 3.  Next, distcheck configures the thing, re-creating many of
>     these .deps files
> 
> 4.  When distcheck starts to construct the new tarball, it copies
>     the source directory, preserving permissions, then it copies
>     built files over the source directory files.  Except it can't.
>     It dies.

Here's the required patch to automake's distdir.am file
found in ${prefix}/share/automake-*/am/distdir.am:

--- distdir.am  Sun Jul 21 21:31:06 2002
+++ distdir.am.new      Mon Aug 19 20:14:41 2002
@@ -98,10 +98,11 @@
 ## source files _and_ generated files.  It is also important when the
 ## directory exists only in $(srcdir), because some vendor Make (such
 ## as Tru64) will magically create an empty directory in `.'
+## DO NOT FORGET that there may be duplicates in the source and build :-(
            if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
              cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
            fi; \
-           cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+           cp -pR $$d/$$file $(distdir)$$dir || :; \
          else \
 ## Test for file existence because sometimes a file gets included in
 ## DISTFILES twice.  For example this happens when a single source

If your package does not utilize the auto* tools, then you
will need to hand craft the rules for building the library.

LICENSING:

This material is copyright 1993-2002 by Bruce Korb.
You are licensed to use this under the terms of either
the GNU Lesser General Public License (see: COPYING.lgpl), or,
at your option, the modified Berkeley Software Distribution
License (see:  COPYING.mbsd).  Both of these files should be
included with this tarball.
