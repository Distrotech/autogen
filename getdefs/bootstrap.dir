#! /bin/echo This_file_must_be_sourced,_not_executed
#
# ----------------------------------------------------------------------
# getdefs/bootstrap.dir --- maintainer's bootstrap script
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Time-stamp:        "2009-01-01 08:36:50 bkorb"
#            by: bkorb
#
## This file is part of AutoGen.
## AutoGen copyright (c) 1992-2009 by Bruce Korb - all rights reserved
##
## AutoGen is free software: you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by the
## Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## AutoGen is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
## See the GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  If not, see <http://www.gnu.org/licenses/>.
# ----------------------------------------------------------------------
# @(#) $Id: bootstrap.dir,v 4.8 2009/01/01 16:49:26 bkorb Exp $
# ----------------------------------------------------------------------

#  This script rebuilds sources not kept in the CVS repository.
#  These files are distributed, so it is not necessary to invoke
#  AutoGen before building AutoGen.  (Like I had to do long ago :)

#  Dump the bootstrap recursive argument.  We're not interested.
#
if [ "$1" = recursive ]
then
    shift
fi

#  Check for a "force" option
#
if [ "$1" = "-f" ]
then force=true  ; shift
else force=false ; fi

targets="$@"
[ -z "$targets" ] && targets=proto.h

for f in $targets
do
  case $f  in

  proto.h )
    mk-fwd -p g*.c || { echo no working mk-fwd program ; exit 1 ; }
    ;;

  sort )
    set -x
    for g in *.c
    do
      blocksort input=$g out=$g.new \
                pattern='^/\*$' \
                start='END-FORWARD' \
                key='^([a-zA-Z0-9_]+)\(' trail='^/\* emacs'
      if [ -s $g.new ]
      then
        if cmp $g $g.new > /dev/null
        then
          rm -f $g.new
        else
          echo "Declarations reordered in $g"
          mv -f $g.new $g
        fi
      fi
    done
    ;;

  * )
    echo "Don't know how to make $f"
    exit 1
    ;;
  esac
done

# Local Variables:
# mode:             shell-script
# sh-indentation:   2
# indent-tabs-mode: nil
# End:

# bootstrap.dir ends here
