#! /bin/echo This_file_must_be_sourced,_not_executed
#
# ----------------------------------------------------------------------
# config/bootstrap.local --- maintainer's bootstrap script
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Thu Jul 29 09:32:11 1999
# Last Modified:     $Date: 2000/09/22 15:54:19 $
#            by:     Bruce Korb <bkorb@gnu.org>
# ----------------------------------------------------------------------
# @(#) $Id: bootstrap.local,v 1.32 2000/09/22 15:54:19 bkorb Exp $
# ----------------------------------------------------------------------

add_make_links()
{
  if grep -l 'MAKE LINK TREE' configure > /dev/null 2>&1
  then return ; fi

  mv configure configure.tmp

  (
    sed 2q configure.tmp
    cat <<-	'_EOF_'

	#MAKE LINK TREE
	#
	top_builddir=`pwd`
	top_srcdir=`echo $0 | sed 's,/[^/]*$,,'`
	top_srcdir=`cd $top_srcdir && pwd`
	if test "$top_srcdir" = "$top_builddir" ; then : ; else
	  ( cd $top_srcdir
	    find . -type d -print ) |
	  grep -v '/CVS\|/RCS' |
	  while read f
	  do test -d $f || mkdir $f
	  done

	  ( cd $top_srcdir
	    find . \( -type f -o -type l \) -print ) |
	  grep -v '/CVS\|/RCS\|~$\|,v$\|/#' |
	  while read f
	  do
	     test -f $f || ln -sf $top_srcdir/$f $f
	  done
	  sh ./configure $@
	  exit $?
	fi

_EOF_
    sed -e 1d -e 2d configure.tmp
  ) > configure

  rm -f configure.tmp
  chmod +x configure
}

locate_exe()
{
    if [ -x "$1" ]
    then
        echo "$1"
        return 0
    fi

    case "${1}" in
    */* )
        echo "Cannot find ${1}" >&2
        return 1
        ;;
    "" )
        echo "USAGE:  locate_exe <exe-name>" >&2
        exit 1
        ;;
    * )
        name="${1}"
        ;;
    esac

    SV="${IFS}"
    IFS=" :"
    set -- ${PATH}
    for f
    do
        if [ -x ${f}/${name} ]
        then
            echo ${f}/${name}
            return 0
	fi
    done
    return 1
}

#  IF the source dir is not known,
#  THEN it is the directory above the directory that
#       contains this file.
#
[ -z "${srcdir}" ] && {
    srcdir=`echo $0 | sed 's;/[^/]*/[^/]*$;;'`
}

MISSING=${MISSING-${srcdir}/config/missing}

case ${BOOTSTRAP} in

pre )
    cp -fp ${srcdir}/config/bootstrap ${srcdir}/snprintfv/config
    rm -f ${srcdir}/configure

    #  This is OKAY because we prime it via the fake configure file
    #
    ( test -n "$AUTOGEN" && \
      columns --version  && \
      getdefs --version ) > /dev/null 2>&1 || exit 0

    ( cd ${srcdir}/config; autogen misc.def; )

    test -f doc/autogen.texi \
        || echo '@setfilename fnord' > doc/autogen.texi

    byacc=`locate_exe byacc`
    if [ -z "$byacc" ]
    then
        byacc=`locate_exe yacc`
        if [ -z "$byacc" ]
        then
            byacc=`locate_exe bison`
            if [ -z "$byacc" ]
            then
                echo cannot bootstrap -- no yacc parser
                exit 1
            fi
        fi
    fi
    export byacc

    if echo $@ | egrep -i debug >/dev/null 2>&1
    then DEBUG_OPTS="-DDEBUG=1"
    else DEBUG_OPTS="-UDEBUG" ; fi
    export DEBUG_OPTS
    ;;

post )
    # remove the fake file so we don't forget to generate it later.
    test "`sed 2q doc/autogen.texi`" != "@setfilename fnord" \
        || rm -f doc/autogen.texi
    add_make_links
    ;;

addlink )
    add_make_links
    ;;

esac

# Local Variables:
# mode:shell-script
# sh-indentation:4
# End:

# config/bootstrap.local ends here
