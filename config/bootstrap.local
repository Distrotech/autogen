#! /bin/echo This_file_must_be_sourced,_not_executed
# config/bootstrap.local --- maintainer's bootstrap script
#
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Thu Jul 29 09:32:11 1999
# Time-stamp:        "2006-09-16 12:38:27 bkorb"
#            by: bkorb
# ----------------------------------------------------------------------
# @(#) $Id: bootstrap.local,v 4.26 2006/09/16 19:58:35 bkorb Exp $
# ----------------------------------------------------------------------

locate_exe()
{
    if [ -x "$1" ]
    then
        echo "$1"
        return 0
    fi

    case "${1}" in
    */* )
        echo "Cannot find ${1}" >&2
        return 1
        ;;
    "" )
        echo "USAGE:  locate_exe <exe-name>" >&2
        exit 1
        ;;
    * )
        name="${1}"
        ;;
    esac

    SV="${IFS}"
    IFS=" :"
    set -- ${PATH}
    for f
    do
        if [ -x ${f}/${name} ]
        then
            echo ${f}/${name}
            return 0
        fi
    done
    return 1
}

make_funcs_def()
{
  ${VERBOSE} && set -x
  svdir=`pwd`
  cd ${srcdir}/autoopts
  test -d autoopts || mkdir autoopts
  test -d po       || mkdir po
  ${AGexe} -L. genshell.def  || exit 1
  ${AGexe} -L. usage-txt.def || exit 1
  mv usage-txt.h   autoopts/.
  mv usage-txt.pot po/.
  files=`sed -n '/^CSRC/,/\.c$/p' Makefile.am | \
      sed '/^CSRC/d;s/[=\\]//'
      echo  ../compat/pathfind.c guileopt.c`
  getdefs linenum srcfile template=options_h output=funcs.def $files
  chmod u+w funcs.def
  eval "`egrep '^AO_' ../VERSION`"
  cat >> funcs.def <<-  _END_VERS_INFO_
	vers-info       = "${AO_CURRENT}:${AO_REVISION}:${AO_AGE}";
	vers-curr       = "`expr '(' $AO_CURRENT   '*' 4096 ')' + $AO_AGE`";
	vers-min        = "`expr '(' $AO_CURRENT - $AO_AGE ')' '*' 4096`";
	vers-min-str    = "`expr $AO_CURRENT - $AO_AGE`:0:0";
	vers-template   = "`expr $AO_CURRENT '*' 4096`";
	library         = opts;
	/*
	 *  THIS FILE IS DISTRIBUTED
	 *
	 *  This file is used to construct options.h + doc files.  Because it is
	 *  such a nuisance to get the build ordering correct, we distribute
	 *  this.  It should be constructed after all binaries are built.
	 */
	_END_VERS_INFO_
  ${AGexe} funcs.def
  test -f options.h || exit 1

  #  Regenerate the "genshell.h" 'cuz we just altered the template to
  #  contain the header version number.
  #
  ${AGexe} -L. genshell.def || exit 1
  mv options.h autoopts/.
  ${AGexe} -Tagman3.tpl funcs.def || exit 1
  exec 4> Makefile.new
  sed '/^GENMAN /q' Makefile.am >&4
  ls -1 *.3 | \
    fgrep -v 'pathfind.3' | \
    ${CLexe} -I4 --spread=1 --line-sep=' \' >&4  # '
  rm -f *.3
  echo "MAN_STAMP   = man3-stamp" >&4
  sed '1,/^MAN_STAMP /d' Makefile.am >&4
  exec 4>&-
  if cmp Makefile.new Makefile.am
  then rm -f Makefile.new
  else mv -f Makefile.new Makefile.am
       echo "WARNING: Makefile.am has been updated"
  fi
  :mkfwd -p `egrep -l '^LOCAL |START-STATIC-FORWARD' *.c` > /dev/null 2>&1 || :
  ${AGexe} aoconf.def
  cd ${svdir}
}

config_versions()
{
    set -a
    . VERSION
    set +a
    unset LANG || LANG=''

    if grep '==ADD_CONFIG_FILES==' ${config_file} > /dev/null
    then
      exec 4> configure.files
      echo 'AC_CONFIG_FILES([\' >&4
      #'
      list=$(
        find [a-rt-z]* snprintfv/Makefile.am Makefile.am \
            -name 'Makefile.am' -o -name '*.in' | \
          sed 's,\.\(am\|in\)$,,;/^configure$/d' | sort -u)
      for f in ${list} ; do echo $f ; done | \
          sed 's/^/    /;$s/$/ ])/' >&4
      exec 4>&-

      sed="-e 's/^AC_INIT(.*/AC_INIT([${PACKAGE}],[${AG_VERSION}],[${EADDR}])/'"
      case "${AG_PATCHLEVEL}" in
      ( *[0-9]pre[1-9]* ) : ;;
      ( * ) sed="${sed} -e '/^case .*GCC.* in/,/^esac/d'"
            ;;
      esac
      sed="${sed} -e '/==ADD_CONFIG_FILES==/r configure.files'"
      sed="${sed} -e '/==ADD_CONFIG_FILES==/d'"

      : "sed ${sed} ${config_file} > configure.tmp"
      eval sed ${sed} ${config_file} > configure.tmp

      mv -f configure.tmp ${config_file}
      rm -f configure.files
    fi

    for f in $(egrep -l 'eaddr +=' */*opts.def)
    do sed "/eaddr  *=/s/= .*/= '${EADDR}';/" $f > X ; mv -f X $f
    done

    if grep '__CURRENT_VERSION__' NEWS > /dev/null
    then
      sed "1s/__CURRENT_VERSION__.*/${AG_VERSION} - $(date '+%B %Y')/" NEWS > X
      mv -f X NEWS
    fi

    ( cd ${srcdir}/config
      ${AGexe} -L. libopts.def
      ${AGexe} -L. misc.def
    ) || exit 1
    cp ${srcdir}/snprintfv/snprintfv.m4 ${srcdir}/config/.

    marker='=== Component Todo:'
    rm -f TODO
    exec 3> TODO
    sed "/${marker}/,\$d" TODO-top >&3
    for f in */TODO
    do
      test -f $f || continue
      echo ; echo ${marker} ${f} '==='
      cat ${f}
    done >&3
    exec 3>&-
}

check_tools()
{
    byacc=`locate_exe byacc`
    if [ -z "$byacc" ]
    then
        byacc=`locate_exe yacc`
        if [ -z "$byacc" ]
        then
            byacc=`locate_exe bison`
            if [ -z "$byacc" ]
            then
                echo cannot bootstrap -- no yacc parser
                exit 1
            fi
        fi
    fi
    export byacc
    test -z "${AGexe}" -o -z "$GDexe" -o -z "$CLexe" && exit 1

    ( $CLexe --version  && \
      $GDexe --version  && \
      $AGexe --version ) > /dev/null || exit 1
}

#  IF the source dir is not known,
#  THEN it is the directory above the directory that
#       contains this file.
#
[ -z "${srcdir}" ] && {
    srcdir=`echo $0 | sed 's;/[^/]*$;;'`
}

MISSING=${MISSING-${srcdir}/config/missing}

case ${BOOTSTRAP} in

( pre )
    echo '@setfilename autogen.info' > ${srcdir}/doc/autogen.texi

    if test -f ${srcdir}/configure
    then rm -f ${srcdir}/configure ; fi

    check_tools
    make_funcs_def
    config_versions
    chmod a+x ${srcdir}/*/test/*.test
    ;;

( post )
    rm -f  ${srcdir}/doc/autogen.texi
    ;;
esac

# Local Variables:
# mode: shell-script
# sh-indentation: 2
# indent-tabs-mode: nil
# End:

# config/bootstrap.local ends here
