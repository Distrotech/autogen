#! /bin/ksh
#  -*- Mode: Shell-script -*-
# ----------------------------------------------------------------------
timestamp=$(set -- \
  Time-stamp:        "2006-08-22 07:17:38 bkorb"
  echo ${2} | sed 's/[^0-9]//g')
# Author:            Bruce Korb <bkorb@gnu.org>
# Maintainer:        Bruce Korb <bkorb@gnu.org>
# Created:           Fri Jul 30 10:57:13 1999
#            by: bkorb
# ----------------------------------------------------------------------
# @(#) $Id: mkconfig.sh,v 4.6 2006/08/22 16:06:35 bkorb Exp $
# ----------------------------------------------------------------------
case "$1" in
-CVS ) update_cvs=true  ;;
-*   ) print "USAGE: $0 [-CVS]"
       print "Create a new version of 'noag-boot.sh'."
       print "'-CVS' specifies commiting the new file, too."
       print "This program should be run in a checkout tree."
       exit 0
       ;;
*    ) update_cvs=false ;;
esac

die() {
  print -u2 "mkconfig fatal error:  $*"
  exit 1
}

program=${0}
prog=$(basename ${0})

sd=$(\cd $(dirname $0) > /dev/null 2>&1 && pwd -P)
test -n "${sd}" || die "Cannot locate source directory for $0"
test -d ${sd}/CVS || die "No CVS directory in ${sd}"

tmpag=$( (mktemp -d $HOME/tmp/ZZXXXXXX.d) 2>/dev/null)
test -z "${tmpag}" && tmpag=$HOME/tmp/ZZ$$.d && {
  mkdir -p ${tmpag} || die "Cannot make directory ${tmpag}"
}

cd ${tmpag} || die "cannot cd to ${tmpag}"
cfgfile=$(\cd .. >/dev/null && pwd -P)/config$$.tmp
exec 5> ${cfgfile}
cp -frp ${sd}/* .

find * -type f | xargs chmod u+w
find * -type d | xargs chmod 755

bstr=$(set -- c*f*g/bootstrap ; echo $1)
test -f ${bstr} || die "Cannot locate bootstrap file"
sh $bstr || die "error:  bootstrap failed"

nl='
'
GENLIST=''
STAMPLIST=''
PROTOLIST=''

for f in $(find * -type f | fgrep -v CVS/ | sort)
do
  case "$f" in
  */stamp*    | \
  */*stamp    )
    test -f ${sd}/${f} || STAMPLIST="${STAMPLIST}${f}${nl}" ;;

  */proto.h   )
    test -f ${sd}/${f} || PROTOLIST="${PROTOLIST}${f}${nl}" ;;

  configure   | \
  config*.tmp | \
  *.in        | \
  *~          | \
  aclocal*    | \
  autom4*     ) : ;;
  * )
    [ -f ${sd}/${f} ] || GENLIST="${GENLIST}${f}${nl}"
    ;;
  esac
done

#  Make sure the new file removes the current collection of files
#
cat <<- _EOF_ >&5
	#! /bin/sh
	#
	#  DO NOT EDIT THIS FILE
	#
	#  It is generated by ${prog}.  Make necessary changes there.
	#
	# ----------------------------------------------------------------------
	_EOF_

cat <<- '_EOF_' >&5
	SVDIR=`pwd`
	cd `echo $0 | sed 's;/[^/]*$;;'`
	SRCDIR=`pwd`

	if [ ! -f ./configure.in ]
	then
	  echo cannot locate top source directory for AutoGen
	  exit 1
	fi

	if [ -z "${VERBOSE}" ]
	then VERBOSE=false ; VERBOSE_ARG=""
	else VERBOSE=true ; VERBOSE_ARG="-x" ; set -x ; fi
	export VERBOSE VERBOSE_ARG

	#  Touch the stamp-* files so bootstrap.dir won't try to build them
	#
	_EOF_

print -u5 "touch -t ${timestamp} \\"

for f in ${STAMPLIST}
do echo $f
done | columns --spread=1 -I8 --line=" \\" >&5

print -u5

for f in ${GENLIST}
do echo $f ; done | \
columns --spread=1 -I10 --first='for f in ' --line=" \\" >&5

cat <<- '_EOF_' >&5
	do
	  if [ -f $f ]
	  then
	    rm -f $f || {
	      echo cannot remove $f
	      exit 1
	    }
	  fi
	done

	( uudecode -o /dev/stdout | \
	  gunzip | \
	  tar -xvf -
	_EOF_

print -u5 ') <<\_EOArchive_'

start_mark='DO NOT EDIT THIS FILE'
end_mark='\(and the template file\|It has been extracted by getdefs\)'

# Strip out variable parts of generated files.
#
for f in ${GENLIST}
do
  sed "/${start_mark}/,/${end_mark}/d" ${f} > ${f}.XX || continue
  mv -f ${f}.XX ${f}
done

for f in ${PROTOLIST}
do
  egrep -v '^ \* Generated' ${f} > $f.XX || continue
  mv -f ${f}.XX ${f}
done

touch -t ${timestamp} ${GENLIST}

tar cf - ${GENLIST} | \
  gzip --best | \
  uuencode -m /dev/stdout >&5

print -u5 '_EOArchive_'

#  Finally, add the code that generates the files generated
#  by standard tools (yacc/byacc/bison).
#
cat <<- '_EOF_' >&5

	sh ${VERBOSE_ARG} config/bootstrap $@ || exit 1
	cd $SVDIR
	sh ${VERBOSE_ARG} ${SRCDIR}/configure $@
	exit 0
	# noag-boot.sh ends here
	_EOF_

exec 5>&-

if cmp ${cfgfile} ${sd}/noag-boot.sh
then
  echo noag-boot.sh is unchanged
  rm -f ${cfgfile}

elif ${update_cvs:-false}
then
  cd $sd
  cvs edit noag-boot.sh
  mv -f ${cfgfile} noag-boot.sh
  cvs commit -m'CVS-ed noag-boot.sh script update' noag-boot.sh

elif test -t 1
then
  ( cd $sd
    echo noag-boot.sh would change:
    echo diff -c noag-boot.sh ${cfgfile}
    diff -c noag-boot.sh ${cfgfile}
  ) | ${PAGER-more}
fi

rm -rf ${tmpag}

# mkconfig.sh ends here
